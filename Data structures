PROGRAM FOR BUBBLE SORT IN JAVA

public class Bubble {
//function to print array elements
static void print(int a[])
{
int n = a.length;

//int i;
for(int i=0;i<n;i++)
{
System.out.println(a[i]+ "");
}
}
//function to implment bubble sort
static void bubbleSort(int a[])
{
int n = a.length;
int i,j,temp;
for(i=0;i<n;i++)
{
for(j=i+1;j<n;j++)
{
if(a[j]<a[i])
{// for swapping
temp = a[i];
a[i] = a[j];
a[j] = temp;
}
}
}
}

//driver method

public static void main(String[] args) {
int a[] = {35, 10, 31, 11, 26};
Bubble b1 = new Bubble();
System.out.println("Before Sorting...");
b1.print(a);
b1.bubbleSort(a);
System.out.println();
System.out.println("After Sorting...");
b1.print(a);
}
}

PROGRAM FOR MERGE SORT IN JAVA:

class MergeSort {
// Merges two subarrays of arr[].
// First subarray is arr[l..m]
// left to mid -> mid+1 to Right
// 23 45 67 78 90
// 3-0+1 = 2
// 5-3 =2
// Second subarray is arr[m+1..r]
void merge(int arr[], int l, int m, int r)
{
// Find sizes of two subarrays to be merged
int n1 = m - l + 1;
int n2 = r - m;

/* Create temp arrays */
int L[] = new int[n1];
int R[] = new int[n2];

/*Copy data to temp arrays*/
for (int i = 0; i < n1; ++i)
L[i] = arr[l + i];
for (int j = 0; j < n2; ++j)
R[j] = arr[m + 1 + j];

/* Merge the temp arrays */

// Initial indexes of first and second subarrays
int i = 0, j = 0;

// Initial index of merged subarray array
int k = l;
while (i < n1 && j < n2) {
if (L[i] <= R[j]) {
arr[k] = L[i];
i++;
}
else {
arr[k] = R[j];
j++;
}
k++;
}

/* Copy remaining elements of L[] if any */
while (i < n1) {
arr[k] = L[i];
i++;
k++;
}

/* Copy remaining elements of R[] if any */
while (j < n2) {
arr[k] = R[j];
j++;
k++;
}
}

