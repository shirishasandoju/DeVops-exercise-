CALCULATOR PROGRAM IN JAVA
package com.basicjava;
import java.util.Scanner;
public class Calculator {
public static void main(String[] args) {
//Printf("");
//Scanf("%d", )
//cout<<"";
//cin>>variable
//System.out.println("" +var);
//Scanner() -> taking the input from the user
Scanner read = new Scanner(System.in);
System.out.println("Enter two numbers");
//nextDouble() reads the next double from the keyboard

double first = read.nextDouble();
double second= read.nextDouble();
System.out.println("Enter an operator(+,-,*,/):");
char operator = read.next().charAt(0);
double result;

//switch case for all the operations.
switch(operator)
{
case '+':
result=first+second;
break;
case '-':
result=first-second;
break;
case '*':
result=first*second;
break;
case '/':
result=first/second;
break;
default:
System.out.println("Error, operator is not correct");
return;
}
//print the result of operaations
System.out.printf("%.1f %c %.1f=%.1f",first,operator,second,result);
}

}

package com.basicjava;
import java.util.ArrayList;

class Employee{
	@Override
	public String toString() {
		return "Employee [id=" + id + ", name=" + name + ", salary=" + salary + "]";
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public double getSalary() {
		return salary;
	}
	public void setSalary(double salary) {
		this.salary = salary;
	}
	public Employee(int id, String name, double salary) {
		super();
		this.id = id;
		this.name = name;
		this.salary = salary;
	}
	int id;
	String name;
	double salary;
}



public class ArrayList_Demo{
public static void main(String[] args) {
	ArrayList<Employee> list = new ArrayList<>();
	list.add(new Employee(105, "Siri", 333442.23));
	list.add(new Employee(106, "Haritha", 323442.23));

	
	System.out.println(list);
}
}

package com.basicjava;


import java.util.LinkedList;
public class Linkedlist_practice {
	public static void main(String[] args) {
		LinkedList <String> items=new LinkedList<>();
		items.add("Biryani");
		items.add("Noodles");
		items.add("pizza");
		System.out.println(items);
		String str=items.get(2);
		String str1=items.remove(1);
		System.out.println("Element at index 2:"+str);
	    System.out.println("");
		}
	}
	SINGLE LINKED LIST:
	class SingleLinkedlist
{
class Node;
int data;
Node next;
public Node(int data){
this.data=data;
this.next=null;
}
}
public Node head= null;
public Node tail=null;
public void addNode(int data)
{
Node newNode= new Node(data);
if(head==null)
{
head= newNode;
tail= newNode;
}
else
tail.next= newNode;
tail=newNode;
}
}
public void print()
{
Node current=head;
if(head==null)
{
System.out.println("list is empty");
return;
}
while(current!=null)
{
System.out.println(current.data + " ");
current= current.next;
}
System.out.println();
}
}
class List
{
public static void main( String[] args)
{
SingleLinkedlist list1=new SingleLinkedlist();
list1.addNode(1);
list1.addNode(7);
list1.addNode(9);
list1.addNode(5);
list1.addNode(2);
System.out.println("Single Linked list: ");
list1.print();
}
}






	
