Basics of Junit Framework
Features of Junit Framework
Unit Test Case in Junit
Test Methods
Assertions
Annotations
Hands on: Writing Junit Tests using eclipse


Test Suite
Exception Testing
Test Timeouts
Parameterized Tests
Hands on: Parameterized Tests
Introduction to Hamcrest Library
Using assertThat
Testing using mock objects
Hands on: assertThat
Mocking

create an application of banking where we have a method which can calculate the emi and one more method which will calculate the complex interest rate for the banking , The complex rate has two parameters which are rate with a specified period of interest accrual and the capital growth coefficient.
and then create 2 or more than 2 test cases using junit for testing your application

import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class BankingApplicationTest {

    @Test
    public void testCalculateEMI() {
        BankingApplication bankingApp = new BankingApplication();
        double principal = 50000;
        double interestRate = 5;
        int tenure = 1; // 1year
        
        double expectedEMI = 4275.35;
        double actualEMI = bankingApp.calculateEMI(principal, interestRate, tenure);
        assertEquals(expectedEMI, actualEMI);
    }
    
    @Test
    public void testCalculateCompoundInterest() {
        BankingApplication bankingApp = new BankingApplication();
        double principal = 50000;
        double interestRate = 5;
        int tenure = 1; // 1 year
        
        double expectedInterest = 1304.2;
        double actualInterest = bankingApp.calculateCompoundInterest(principal, interestRate, tenure);
        assertEquals(expectedInterest, actualInterest);
    }
}


